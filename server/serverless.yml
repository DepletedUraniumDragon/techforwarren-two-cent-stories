service: two-cent-stories
plugins:
  - serverless-api-gateway-throttling
provider:
  name: aws
  runtime: python3.8
  apiGateway:
    minimumCompressionSize: 1024
  logs:
    restApi: true
  tracing:
    apiGateway: true

# you can overwrite defaults here
stage: dev
region: us-east-1


custom:
  # Configures throttling settings for all http endpoints
  apiGatewayThrottling:
    maxRequestsPerSecond: 1000
    maxConcurrentRequests: 500

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**

functions:
  submissions:
    handler: handler.get_submissions
    events:
      - http:
          path: /submissions
          method: get
          cors: true

#          throttling:
#            maxRequestsPerSecond: 2000
#            maxConcurrentRequests: 1000
#          request:
#            parameters:
#              querystrings:
#                url: true
#              headers:
#                foo: false
#              paths:
#                bar: false`
#      - http:
#          path: posts/{id}
#          method: get
#          request:
#            parameters:
#              paths:
#                id: true
#    JSON schema validation
#          request:
#            schema:
#              application/json: ${file(create_request.json)}
#  goodbye:
#    handler: handler.goodbye
#    #    The following are a few example events you can configure
#    #    NOTE: Please make sure to change your handler code to work with those events
#    #    Check the event documentation for details
#    events:
#      - http:
#          path: /logout
#          method: get
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
# TODO ADD WAF for rate limiting and such
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"


#resources:
#  Resources:
#    usersTable:
#      Type: AWS::DynamoDB::Table
#      Properties:
#        TableName: submission
#        AttributeDefinitions:
#          - AttributeName: email
#            AttributeType: S
#        KeySchema:
#          - AttributeName: email
#            KeyType: HASH
#        ProvisionedThroughput:
#          ReadCapacityUnits: 1
#          WriteCapacityUnits: 1